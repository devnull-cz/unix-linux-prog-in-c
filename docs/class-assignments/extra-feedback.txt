Additional notes on the lab assignment based on existing implementations.

Last updated: Dec 31, 2018.

--------------------------------------------------------------------------------
We really require you to use a consistent C style.

For example, the following two lines do not use consistent C style as one line
uses extra spaces with parentheses and the other does not, and also there is a
differentce with whitespace around '{':

if (WIFEXITED( wstatus )){

if (pipe(pd) == -1) {

--------------------------------------------------------------------------------
Refuse special characters that you do not implement yet.  For example, if you do
not implement pipes (as in the 1st phase), refuse it.  It cannot work like this:

$ date | cat | sort | wc -l
Mon Dec 31 13:06:56 CET 2018

$ echo hello | wc -l
hello

If you did accept '|' as a normal character, it should have worked like this:

$ echo hello | wc -l
hello | wc -l

And in case of date(1), it should have printed out an error, similar to this:

$ date xxx
date: illegal time format
usage: date [-jnRu] [-d dst] [-r seconds] [-t west] [-v[+|-]val[ymwdHMS]] ...
            [-f fmt date | [[[mm]dd]HH]MM[[cc]yy][.ss]] [+format]

So, do something like the following:

$ echo hello | wc -l
(default rule matched) error:1: syntax error near unexpected token '|'

Also, refuse redirections unless you already implemented those.  The following
is not correct in the 1st phase:

$ echo hello > out
hello

--------------------------------------------------------------------------------
Please do implement command line history.  In case of readline, it's really just
calling one function, like this, for example:

if ((input = readline(prompt) ...
	...

if (strcmp(input, "") != 0)
	add_history(input);

--------------------------------------------------------------------------------
You need to accept full path as well as using the $PATH.

$ ls
<output here>

$ /bin/ls
<output here>
